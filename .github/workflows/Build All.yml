name: C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libx11-dev \
          libxext-dev \
          libasound2-dev

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release --verbose

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: build/avbd_demo3d

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Clone and Bootstrap vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
      shell: powershell

    - name: Set VCPKG_ROOT and add to PATH
      run: |
        echo "VCPKG_ROOT=${{ github.workspace }}\vcpkg" >> $env:GITHUB_ENV
        echo "${{ github.workspace }}\vcpkg" >> $env:GITHUB_PATH
      shell: powershell

    - name: Install dependencies
      # FIX: Removed 'glu' as it is not a standalone vcpkg package.
      # The 'opengl' package provides the necessary find-modules for both OpenGL and GLU.
      run: vcpkg install sdl2 opengl

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake
        cmake --build . --config Release --verbose

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/Release/

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run: brew install sdl2 pkg-config

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release --verbose

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: build/avbd_demo3d

  build-web:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v12
      with:
        version: '3.1.55'
        
    - name: Configure and Build
      run: |
        source ./emsdk/emsdk_env.sh
        mkdir build-web
        cd build-web
        emcmake cmake ..
        cmake --build . --verbose

    - name: Upload Web Artifact
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: |
          build-web/avbd_demo3d.html
          build-web/avbd_demo3d.js
          build-web/avbd_demo3d.wasm
