name: C++ CI and Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libx11-dev \
          libxext-dev \
          libasound2-dev

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release --verbose

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: build/avbd_demo3d

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v2

    - name: Clone and Bootstrap vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
      shell: powershell

    - name: Set VCPKG_ROOT and add to PATH
      run: |
        echo "VCPKG_ROOT=${{ github.workspace }}\vcpkg" >> $env:GITHUB_ENV
        echo "${{ github.workspace }}\vcpkg" >> $env:GITHUB_PATH
      shell: powershell

    - name: Install dependencies
      run: vcpkg install opengl glad
      shell: cmd

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake
        cmake --build . --config Release --verbose
      shell: cmd

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/Release/avbd_demo3d.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run: brew install sdl2 pkg-config

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_CXX_FLAGS="-F/Library/Frameworks -framework OpenGL"
        cmake --build . --config Release --verbose

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: build/avbd_demo3d

  build-web:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: '3.1.55'
        actions-cache-folder: 'emsdk-cache'

    - name: Install Ninja
      run: sudo apt-get update && sudo apt-get install -y ninja-build

    - name: Configure and Build
      run: |
        source "${{ env.EMSDK }}/emsdk_env.sh"
        mkdir build-web
        cd build-web
        emcmake cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-s USE_SDL=2 -s USE_WEBGL2=1 -s ALLOW_MEMORY_GROWTH=1 -s EXPORT_NAME=avbd_demo3d" ..
        ninja --verbose

    - name: List Build Outputs
      run: ls -l build-web/
      working-directory: ${{ github.workspace }}

    - name: Upload Web Artifact
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build-web/avbd_demo3d.html

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos, build-web]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: artifacts/linux

    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: artifacts/windows

    - name: Download macOS Artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: artifacts/macos

    - name: Download Web Artifact
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: artifacts/web

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Linux Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/linux/avbd_demo3d
        asset_name: avbd_demo3d-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/windows/avbd_demo3d.exe
        asset_name: avbd_demo3d-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/macos/avbd_demo3d
        asset_name: avbd_demo3d-macos
        asset_content_type: application/octet-stream

    - name: Upload Web HTML Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/web/avbd_demo3d.html
        asset_name: avbd_demo3d.html
        asset_content_type: text/html

  prerelease:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos, build-web]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create prerelease tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git push origin :refs/tags/prerelease || true
        git tag prerelease ${{ github.sha }} -f
        git push origin prerelease --force

    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: artifacts/linux

    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: artifacts/windows

    - name: Download macOS Artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: artifacts/macos

    - name: Download Web Artifact
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: artifacts/web

    - name: Create Prerelease
      id: create_prerelease
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: prerelease
        release_name: Prerelease Build
        draft: false
        prerelease: true

    - name: Upload Linux Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_prerelease.outputs.upload_url }}
        asset_path: artifacts/linux/avbd_demo3d
        asset_name: avbd_demo3d-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_prerelease.outputs.upload_url }}
        asset_path: artifacts/windows/avbd_demo3d.exe
        asset_name: avbd_demo3d-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_prerelease.outputs.upload_url }}
        asset_path: artifacts/macos/avbd_demo3d
        asset_name: avbd_demo3d-macos
        asset_content_type: application/octet-stream

    - name: Upload Web HTML Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_prerelease.outputs.upload_url }}
        asset_path: artifacts/web/avbd_demo3d.html
        asset_name: avbd_demo3d.html
        asset_content_type: text/html
